apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-endpoint
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-endpoint
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-endpoint
    spec:
      serviceAccountName: {{ template "funcx_endpoint.fullname" . }}
      containers:
      - name: {{ .Release.Name }}-endpoint
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        command: [ "/bin/bash", "-c", "--" ]
        {{- if .Values.endpointUUID }}
        args: [ "/home/funcx/boot.sh {{ .Release.Name }} {{ .Values.endpointUUID }}" ]
        {{- else }}
        args: [ "/home/funcx/boot.sh {{ .Release.Name }}" ]
        {{- end }}
        tty: true
        stdin: true
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}

        volumeMounts:
          - mountPath: "/mnt"
            name: funcxmnt
          - name: funcx-sdk-tokens
            mountPath: /funcx/credentials
            readOnly: true
          - name: endpoint-config
            mountPath: /funcx/config
          - name: endpoint-instance-config
            mountPath: /funcx/{{ .Release.Name }}


        ports:
          - containerPort: 5000

      volumes:
        - name: funcxmnt
          emptyDir: {}
        - name: funcx-sdk-tokens
          secret:
            secretName: funcx-sdk-tokens
        - name: endpoint-config
          configMap:
            name: {{ .Release.Name }}-endpoint-config
        - name: endpoint-instance-config
          configMap:
            name: {{ .Release.Name }}-endpoint-instance-config
